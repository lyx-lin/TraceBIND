// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// footprintingAnalysis
NumericMatrix footprintingAnalysis(NumericVector center_sizes, int center_position, int start, int end, NumericVector flank_windows, bool wide_flank, DataFrame bardata);
RcppExport SEXP _tracebind_footprintingAnalysis(SEXP center_sizesSEXP, SEXP center_positionSEXP, SEXP startSEXP, SEXP endSEXP, SEXP flank_windowsSEXP, SEXP wide_flankSEXP, SEXP bardataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type center_sizes(center_sizesSEXP);
    Rcpp::traits::input_parameter< int >::type center_position(center_positionSEXP);
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    Rcpp::traits::input_parameter< int >::type end(endSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type flank_windows(flank_windowsSEXP);
    Rcpp::traits::input_parameter< bool >::type wide_flank(wide_flankSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type bardata(bardataSEXP);
    rcpp_result_gen = Rcpp::wrap(footprintingAnalysis(center_sizes, center_position, start, end, flank_windows, wide_flank, bardata));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tracebind_footprintingAnalysis", (DL_FUNC) &_tracebind_footprintingAnalysis, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_tracebind(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
